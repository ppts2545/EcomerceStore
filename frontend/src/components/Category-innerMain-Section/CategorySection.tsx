import React, { useEffect, useRef, useState } from 'react';
import './Category-Section.css';

interface CategorySectionProps {
  onCategorySelect?: (category: string) => void;
}

const CategorySection: React.FC<CategorySectionProps> = ({ onCategorySelect }) => {
  const categories = [
    { icon: 'ЁЯМИ', name: '', subtitle: 'р╕Фр╕╣р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф' }, // All
    { icon: 'ЁЯТ╗', name: 'р╣Ар╕Чр╕Др╣Вр╕Щр╣Вр╕ер╕вр╕╡', subtitle: 'р╕ер╣Ир╕▓р╕кр╕╕р╕Ф & р╕Щр╣Ир╕▓р╕кр╕Щр╣Гр╕И' },
    { icon: 'ЁЯФМ', name: 'р╕нр╕┤р╣Ар╕ер╣Зр╕Бр╕Чр╕гр╕нр╕Щр╕┤р╕Бр╕кр╣М', subtitle: 'р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╣Гр╕Кр╣Йр╣Др╕Яр╕Яр╣Йр╕▓ & р╣Бр╕Бр╕Фр╣Ар╕Ир╣Зр╕Х' },
    { icon: 'ЁЯЦ▒я╕П', name: 'р╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╣Др╕нр╕Чр╕╡', subtitle: 'р╕Др╕нр╕бр╕Юр╕┤р╕зр╣Ар╕Хр╕нр╕гр╣М & р╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╣Ар╕кр╕гр╕┤р╕б' },
    { icon: 'ЁЯСЧ', name: 'р╣Бр╕Яр╕Кр╕▒р╣Ир╕Щ', subtitle: 'р╕кр╣Др╕Хр╕ер╣Мр╕Чр╕▒р╕Щр╕кр╕бр╕▒р╕в' },
    { icon: 'ЁЯТН', name: 'р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Ыр╕гр╕░р╕Фр╕▒р╕Ъ', subtitle: 'р╕Щр╕▓р╕мр╕┤р╕Бр╕▓ & р╕Ир╕┤р╕зр╣Ар╕зр╕ер╕гр╕╡р╣И' },
    { icon: 'ЁЯПа', name: 'р╕Ър╣Йр╕▓р╕Щ & р╕кр╕зр╕Щ', subtitle: 'р╣Бр╕Хр╣Ир╕Зр╕Ър╣Йр╕▓р╕Щр╕кр╕зр╕в' },
    { icon: 'ЁЯЫЛя╕П', name: 'р╣Ар╕Яр╕нр╕гр╣Мр╕Щр╕┤р╣Ар╕Ир╕нр╕гр╣М', subtitle: 'р╕Вр╕нр╕Зр╣Бр╕Хр╣Ир╕Зр╕Ър╣Йр╕▓р╕Щ' },
    { icon: 'ЁЯОо', name: 'р╣Ар╕Бр╕б & р╕Вр╕нр╕Зр╣Ар╕ер╣Ир╕Щ', subtitle: 'р╕кр╕Щр╕╕р╕Бр╕Чр╕╕р╕Бр╕зр╕▒р╕в' },
    { icon: 'ЁЯУ╖', name: 'р╕Бр╕ер╣Йр╕нр╕З', subtitle: 'р╕Цр╣Ир╕▓р╕вр╕ар╕▓р╕Ю & р╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М' },
    { icon: 'ЁЯТД', name: 'р╕Др╕зр╕▓р╕бр╕Зр╕▓р╕б', subtitle: 'р╕Фр╕╣р╣Бр╕ер╕Хр╕▒р╕зр╣Ар╕нр╕З' },
    { icon: 'ЁЯй║', name: 'р╕кр╕╕р╕Вр╕ар╕▓р╕Ю', subtitle: 'р╣Ар╕зр╕Кр╕ар╕▒р╕Ур╕Ср╣М & р╕нр╕▓р╕лр╕▓р╕гр╣Ар╕кр╕гр╕┤р╕б' },
    { icon: 'тЪ╜', name: 'р╕Бр╕╡р╕мр╕▓ & р╕Яр╕┤р╕Хр╣Ар╕Щр╕к', subtitle: 'р╣Бр╕Вр╣Зр╕Зр╣Бр╕гр╕Зр╣Гр╕кр╣Гр╕к' },
    { icon: 'ЁЯПЛя╕П', name: 'р╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╕Бр╕╡р╕мр╕▓', subtitle: 'р╕Яр╕┤р╕Хр╣Ар╕Щр╕к & р╣Ар╕нр╕▓р╕Чр╣Мр╕Фр╕нр╕гр╣М' },
    { icon: 'ЁЯЪЧ', name: 'р╕вр╕▓р╕Щр╕вр╕Щр╕Хр╣М', subtitle: 'р╕нр╕░р╣Др╕лр╕ер╣И & р╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М' },
    { icon: 'ЁЯз│', name: 'р╕Чр╣Ир╕нр╕Зр╣Ар╕Чр╕╡р╣Ир╕вр╕з', subtitle: 'р╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓ & р╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╣Ар╕Фр╕┤р╕Щр╕Чр╕▓р╕З' },
    { icon: 'ЁЯНХ', name: 'р╕нр╕▓р╕лр╕▓р╕г & р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Фр╕╖р╣Ир╕б', subtitle: 'р╕кр╕Фр╣Гр╕лр╕бр╣Ир╕Чр╕╕р╕Бр╕зр╕▒р╕Щ' },
    { icon: 'ЁЯТК', name: 'р╕нр╕▓р╕лр╕▓р╕гр╣Ар╕кр╕гр╕┤р╕б', subtitle: 'р╕кр╕╕р╕Вр╕ар╕▓р╕Юр╕Фр╕╡р╕Чр╕╕р╕Бр╕зр╕▒р╕Щ' },
    { icon: 'ЁЯУЪ', name: 'р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н & р╕Бр╕▓р╕гр╕ир╕╢р╕Бр╕йр╕▓', subtitle: 'р╣Ар╕Хр╕┤р╕бр╣Ар╕Хр╣Зр╕бр╕Др╕зр╕▓р╕бр╕гр╕╣р╣Й' },
    { icon: 'тЬПя╕П', name: 'р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╣Ар╕Вр╕╡р╕вр╕Щ', subtitle: 'р╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щ' },
    { icon: 'ЁЯОБ', name: 'р╕Вр╕нр╕Зр╕Вр╕зр╕▒р╕Н', subtitle: 'р╕Зр╕▓р╕Щр╕Эр╕╡р╕бр╕╖р╕н & DIY' },
    { icon: 'ЁЯО╡', name: 'р╣Ар╕кр╕╡р╕вр╕Зр╣Ар╕Юр╕ер╕З', subtitle: 'р╕Ър╕▒р╕Щр╣Ар╕Чр╕┤р╕Зр╣Гр╕И' },
    { icon: 'ЁЯС╢', name: 'р╣Бр╕бр╣Ир╣Бр╕ер╕░р╣Ар╕Фр╣Зр╕Б', subtitle: 'р╕Фр╕╣р╣Бр╕ер╕Др╕Щр╕гр╕▒р╕Б' },
    { icon: 'ЁЯРХ', name: 'р╕кр╕▒р╕Хр╕зр╣Мр╣Ар╕ер╕╡р╣Йр╕вр╕З', subtitle: 'р╕гр╕▒р╕Бр╣Ар╕Юр╕╖р╣Ир╕нр╕Щр╕Лр╕╡р╣Й' },
    { icon: 'тЬи', name: 'р╕нр╕╖р╣Ир╕Щр╣Ж', subtitle: 'р╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕Юр╕┤р╣Ар╕ир╕й' }
  ];

  const stripRef = useRef<HTMLDivElement>(null);
  const [canLeft, setCanLeft] = useState(false);
  const [canRight, setCanRight] = useState(false);

  const refreshArrows = () => {
    const el = stripRef.current;
    if (!el) return;
    setCanLeft(el.scrollLeft > 2);
    setCanRight(el.scrollLeft + el.clientWidth < el.scrollWidth - 2);
  };

  const scrollByStep = (dir: 1 | -1) => {
    const el = stripRef.current;
    if (!el) return;
    const step = Math.max(el.clientWidth * 0.9, 400); // р╣Ар╕ер╕╖р╣Ир╕нр╕Щр╕Чр╕╡р╕ер╕░р╣Ар╕Бр╕╖р╕нр╕Ър╣Ар╕Хр╣Зр╕б viewport
    el.scrollBy({ left: dir * step, behavior: 'smooth' });
  };

  useEffect(() => {
    const el = stripRef.current;
    if (!el) return;
    refreshArrows();
    const onScroll = () => refreshArrows();
    const onResize = () => refreshArrows();
    el.addEventListener('scroll', onScroll, { passive: true });
    window.addEventListener('resize', onResize);
    return () => {
      el.removeEventListener('scroll', onScroll);
      window.removeEventListener('resize', onResize);
    };
  }, []);

  return (
    <section className="category-section">
      <div className="container">
        <div className="category-header">
          <div>
            <h2 className="category-title">ЁЯП╖я╕П р╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣Ир╕кр╕┤р╕Щр╕Др╣Йр╕▓</h2>
            <p className="category-subtitle">р╣Ар╕ер╕╖р╕нр╕Бр╕Лр╕╖р╣Йр╕нр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Хр╕▓р╕бр╕Др╕зр╕▓р╕бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Вр╕нр╕Зр╕Др╕╕р╕У</p>
          </div>
          <div className="nav-buttons">
            <button
              className="nav-btn prev"
              aria-label="р╣Ар╕ер╕╖р╣Ир╕нр╕Щр╕Лр╣Йр╕▓р╕в"
              onClick={() => scrollByStep(-1)}
              disabled={!canLeft}
            >
              тА╣
            </button>
            <button
              className="nav-btn next"
              aria-label="р╣Ар╕ер╕╖р╣Ир╕нр╕Щр╕Вр╕зр╕▓"
              onClick={() => scrollByStep(1)}
              disabled={!canRight}
            >
              тА║
            </button>
          </div>
        </div>

        <div className="categories-viewport">
          <div className="edge left" data-show={canLeft} />
          <div className="edge right" data-show={canRight} />
          <div className="categories-strip" ref={stripRef}>
            {categories.map((c, i) => (
              <button
                key={i}
                className={`category-card${c.name === '' ? ' all' : ''}`}
                onClick={() => onCategorySelect?.(c.name)}
                type="button"
              >
                <div className="cat-icon">{c.icon}</div>
                <div className="cat-text">
                  <div className="cat-name">{c.name === '' ? 'р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф' : c.name}</div>
                  <div className="cat-sub">{c.subtitle}</div>
                </div>
              </button>
            ))}
          </div>
        </div>
      </div>
    </section>
  );
};

export default CategorySection;