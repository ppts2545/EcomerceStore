import React, { useState } from 'react';
import './PaymentMethod.css';

interface PaymentMethodProps {
  onMethodSelect: (method: string, data: any) => void;
  totalAmount: number;
  orderData: any;
}

const PaymentMethod: React.FC<PaymentMethodProps> = ({ 
  onMethodSelect, 
  totalAmount, 
  orderData 
}) => {
  const [selectedMethod, setSelectedMethod] = useState<string>('');
  const [bankAccount, setBankAccount] = useState('');
  const [accountName, setAccountName] = useState('');
  const [phoneNumber, setPhoneNumber] = useState('');

  const paymentMethods = [
    {
      id: 'bank_transfer',
      name: '‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£',
      icon: 'üè¶',
      description: '‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏≠‡∏õ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠ ATM'
    },
    {
      id: 'promptpay',
      name: '‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå (PromptPay)',
      icon: 'üì±',
      description: '‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå'
    },
    {
      id: 'truemoney',
      name: 'TrueMoney Wallet',
      icon: 'üí≥',
      description: '‡∏ä‡∏≥‡∏£‡∏∞‡∏ú‡πà‡∏≤‡∏ô TrueMoney'
    },
    {
      id: 'credit_card',
      name: '‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡πÄ‡∏î‡∏ö‡∏¥‡∏ï',
      icon: 'üí≥',
      description: '‡∏ä‡∏≥‡∏£‡∏∞‡∏î‡πâ‡∏ß‡∏¢‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏î‡∏ö‡∏¥‡∏ï'
    }
  ];

  const thailandBanks = [
    { code: 'SCB', name: '‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÑ‡∏ó‡∏¢‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå', color: '#4c2c92' },
    { code: 'KBANK', name: '‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢', color: '#138f2d' },
    { code: 'BBL', name: '‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û', color: '#1e4598' },
    { code: 'KTB', name: '‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏£‡∏∏‡∏á‡πÑ‡∏ó‡∏¢', color: '#1ba5e1' },
    { code: 'TMB', name: '‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ó‡∏´‡∏≤‡∏£‡πÑ‡∏ó‡∏¢', color: '#1279be' },
    { code: 'BAY', name: '‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏£‡∏∏‡∏á‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤', color: '#fec43b' }
  ];

  const handleMethodSelect = (methodId: string) => {
    setSelectedMethod(methodId);
  };

  const handleSubmit = () => {
    if (!selectedMethod) {
      alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô');
      return;
    }

    let paymentData = {
      method: selectedMethod,
      amount: totalAmount,
      orderData: orderData
    };

    switch (selectedMethod) {
      case 'bank_transfer':
        if (!bankAccount || !accountName) {
          alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
          return;
        }
        paymentData = {
          ...paymentData,
          bankAccount,
          accountName
        };
        break;
      case 'promptpay':
        if (!phoneNumber) {
          alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå');
          return;
        }
        paymentData = {
          ...paymentData,
          phoneNumber
        };
        break;
    }

    onMethodSelect(selectedMethod, paymentData);
  };

  return (
    <div className="payment-method-container">
      <div className="payment-header">
        <h2>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h2>
        <div className="total-amount">
          <span>‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞: </span>
          <strong>‡∏ø{totalAmount.toLocaleString()}</strong>
        </div>
      </div>

      <div className="payment-methods">
        {paymentMethods.map((method) => (
          <div
            key={method.id}
            className={`payment-option ${selectedMethod === method.id ? 'selected' : ''}`}
            onClick={() => handleMethodSelect(method.id)}
          >
            <div className="method-icon">{method.icon}</div>
            <div className="method-info">
              <h3>{method.name}</h3>
              <p>{method.description}</p>
            </div>
            <div className="method-radio">
              <input
                type="radio"
                name="paymentMethod"
                checked={selectedMethod === method.id}
                onChange={() => {}}
              />
            </div>
          </div>
        ))}
      </div>

      {selectedMethod === 'bank_transfer' && (
        <div className="payment-details">
          <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£</h3>
          <div className="bank-selection">
            <label>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£:</label>
            <select
              value={bankAccount}
              onChange={(e) => setBankAccount(e.target.value)}
              required
            >
              <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£</option>
              {thailandBanks.map((bank) => (
                <option key={bank.code} value={bank.code}>
                  {bank.name}
                </option>
              ))}
            </select>
          </div>
          <div className="form-group">
            <label>‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:</label>
            <input
              type="text"
              value={accountName}
              onChange={(e) => setAccountName(e.target.value)}
              placeholder="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ"
              required
            />
          </div>
        </div>
      )}

      {selectedMethod === 'promptpay' && (
        <div className="payment-details">
          <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏û‡∏¢‡πå</h3>
          <div className="form-group">
            <label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå:</label>
            <input
              type="tel"
              value={phoneNumber}
              onChange={(e) => setPhoneNumber(e.target.value)}
              placeholder="08X-XXX-XXXX"
              pattern="[0-9]{10}"
              required
            />
          </div>
        </div>
      )}

      {selectedMethod === 'truemoney' && (
        <div className="payment-details">
          <h3>TrueMoney Wallet</h3>
          <div className="form-group">
            <label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå:</label>
            <input
              type="tel"
              value={phoneNumber}
              onChange={(e) => setPhoneNumber(e.target.value)}
              placeholder="08X-XXX-XXXX"
              required
            />
          </div>
        </div>
      )}

      {selectedMethod === 'credit_card' && (
        <div className="payment-details">
          <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£</h3>
          <p className="info-text">
            ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ô‡∏≥‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ï‡∏£
          </p>
        </div>
      )}

      <div className="payment-actions">
        <button
          className="btn-confirm"
          onClick={handleSubmit}
          disabled={!selectedMethod}
        >
          ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
        </button>
      </div>
    </div>
  );
};

export default PaymentMethod;
